{"version":3,"file":"react-swipeable-drawer.preact.umd.js","sources":["../src/DrawerContainer.js","../src/DrawerOverlay.js","../src/DrawerContentContainer.js","../src/MainContentContainer.js","../src/Drawer.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { DrawerOverlay, DrawerContentContainer } from \"./Drawer\";\n\nconst DrawerContainer = ({\n  position,\n  size,\n  swiping,\n  translation,\n  toggleDrawer,\n  handleTouchStart,\n  handleTouchMove,\n  handleTouchEnd,\n  drawerContent,\n  overlayStyle,\n  contentStyle,\n}) => {\n  const open = translation > 0;\n\n  return (\n    <div className=\"DrawerContainer\">\n      <DrawerOverlay\n        position={position}\n        open={open}\n        swiping={swiping}\n        translation={translation}\n        toggleDrawer={toggleDrawer}\n        handleTouchStart={handleTouchStart}\n        handleTouchMove={handleTouchMove}\n        handleTouchEnd={handleTouchEnd}\n        style={overlayStyle}\n      />\n      <DrawerContentContainer\n        position={position}\n        size={size}\n        swiping={swiping}\n        translation={translation}\n        toggleDrawer={toggleDrawer}\n        handleTouchStart={handleTouchStart}\n        handleTouchMove={handleTouchMove}\n        handleTouchEnd={handleTouchEnd}\n        drawerContent={drawerContent}\n        style={contentStyle}\n      />\n    </div>\n  );\n};\n\nexport default DrawerContainer;\n\nDrawerContainer.propTypes = {\n  position: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]).isRequired,\n  size: PropTypes.number.isRequired,\n  swiping: PropTypes.bool.isRequired,\n  translation: PropTypes.number.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  handleTouchStart: PropTypes.func.isRequired,\n  handleTouchMove: PropTypes.func.isRequired,\n  handleTouchEnd: PropTypes.func.isRequired,\n  drawerContent: PropTypes.element.isRequired,\n  overlayStyle: PropTypes.object,\n  contentStyle: PropTypes.object,\n};\n\nDrawerContainer.defaultProps = {\n  overlayStyle: {},\n  contentStyle: {},\n};\n","/* eslint jsx-a11y/click-events-have-key-events: 0 */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst transform = ({ position, swiping, open }) => {\n  switch (position) {\n    case \"top\":\n      return {\n        top: 0,\n        left: 0,\n        right: 0,\n        height: swiping || open ? \"100%\" : \"20px\",\n      };\n    case \"right\":\n      return {\n        right: 0,\n        top: 0,\n        bottom: 0,\n        width: swiping || open ? \"100%\" : \"20px\",\n      };\n    case \"bottom\":\n      return {\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: swiping || open ? \"100%\" : \"20px\",\n      };\n    case \"left\":\n    default:\n      return {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        width: swiping || open ? \"100%\" : \"20px\",\n      };\n  }\n};\n\nconst transition = ({ swiping, open }) => {\n  if (swiping) {\n    return \"\";\n  } else if (open) {\n    return \"background-color .2s ease-in-out, width 0s 0s, height 0s 0s\";\n  }\n  return \"background-color .2s ease-in-out, width 0s .2s, height 0s 0s\";\n};\n\nconst DrawerOverlay = ({\n  position,\n  open,\n  swiping,\n  translation,\n  toggleDrawer,\n  handleTouchStart,\n  handleTouchMove,\n  handleTouchEnd,\n  style,\n}) => (\n  <div\n    className=\"DrawerOverlay\"\n    onClick={open ? toggleDrawer : null}\n    onTouchStart={handleTouchStart}\n    onTouchMove={handleTouchMove(100)}\n    onTouchEnd={handleTouchEnd}\n    style={{\n      position: \"fixed\",\n      zIndex: 1,\n      backgroundColor: `rgba(0,0,0,${0.6 * translation / 100})`,\n      transition: transition({ swiping, open }),\n      ...transform({ position, swiping, open }),\n      ...style,\n    }}\n  />\n);\n\nexport default DrawerOverlay;\n\nDrawerOverlay.propTypes = {\n  position: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]).isRequired,\n  open: PropTypes.bool.isRequired,\n  swiping: PropTypes.bool.isRequired,\n  translation: PropTypes.number.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  handleTouchStart: PropTypes.func.isRequired,\n  handleTouchMove: PropTypes.func.isRequired,\n  handleTouchEnd: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst transform = ({ position, size, translation }) => {\n  switch (position) {\n    case \"top\":\n      return {\n        left: 0,\n        right: 0,\n        top: `-${size}%`,\n        height: `${size}%`,\n        transform: `translateY(${translation}%)`,\n      };\n    case \"right\":\n      return {\n        top: 0,\n        bottom: 0,\n        right: `-${size}%`,\n        width: `${size}%`,\n        transform: `translateX(${-translation}%)`,\n      };\n    case \"bottom\":\n      return {\n        left: 0,\n        right: 0,\n        bottom: `-${size}%`,\n        height: `${size}%`,\n        transform: `translateY(${-translation}%)`,\n      };\n    case \"left\":\n    default:\n      return {\n        top: 0,\n        bottom: 0,\n        left: `-${size}%`,\n        width: `${size}%`,\n        transform: `translateX(${translation}%)`,\n      };\n  }\n};\n\nconst DrawerContentContainer = ({\n  position,\n  size,\n  swiping,\n  translation,\n  handleTouchStart,\n  handleTouchMove,\n  handleTouchEnd,\n  drawerContent,\n  style,\n}) => (\n  <div\n    className=\"DrawerContentContainer\"\n    onTouchStart={handleTouchStart}\n    onTouchMove={handleTouchMove(size)}\n    onTouchEnd={handleTouchEnd}\n    style={{\n      position: \"fixed\",\n      zIndex: 1,\n      transition: swiping ? \"\" : \"transform .2s ease-in-out\",\n      ...transform({ position, size, translation }),\n      ...style,\n    }}\n  >\n    {drawerContent}\n  </div>\n);\n\nexport default DrawerContentContainer;\n\nDrawerContentContainer.propTypes = {\n  position: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]).isRequired,\n  size: PropTypes.number.isRequired,\n  swiping: PropTypes.bool.isRequired,\n  translation: PropTypes.number.isRequired,\n  handleTouchStart: PropTypes.func.isRequired,\n  handleTouchMove: PropTypes.func.isRequired,\n  handleTouchEnd: PropTypes.func.isRequired,\n  drawerContent: PropTypes.element.isRequired,\n  style: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MainContentContainer = ({ translation, mainContentScroll, children }) => {\n  const mainContentOpenStyle =\n    translation > 0\n      ? {\n          position: \"fixed\",\n          top: -mainContentScroll,\n          left: 0,\n          right: 0,\n        }\n      : {};\n\n  return (\n    <div className=\"MainContentContainer\" style={{ ...mainContentOpenStyle }}>\n      {children}\n    </div>\n  );\n};\n\nexport default MainContentContainer;\n\nMainContentContainer.propTypes = {\n  translation: PropTypes.number.isRequired,\n  mainContentScroll: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst START_TRANSLATION = -10;\nconst STOP_TRANSLATION = 100;\n\nclass Drawer extends Component {\n  static propTypes = {\n    position: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]).isRequired,\n    size: PropTypes.number.isRequired,\n    children: PropTypes.func.isRequired,\n  };\n\n  state = {\n    swiping: false,\n    scrolling: false,\n    translation: START_TRANSLATION,\n    clientX: 0,\n    clientY: 0,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { translation } = this.state;\n    if (\n      translation !== prevState.translation &&\n      translation === START_TRANSLATION\n    ) {\n      window.scrollTo(0, this.mainContentScroll);\n    }\n  }\n\n  mainContentScroll = 0;\n\n  saveScrollPosition = () => {\n    const { translation } = this.state;\n    if (translation === START_TRANSLATION) {\n      this.mainContentScroll = window.pageYOffset;\n    }\n  };\n\n  toggleDrawer = () => {\n    this.saveScrollPosition();\n    this.setState(({ translation }) => ({\n      translation: translation > 50 ? START_TRANSLATION : STOP_TRANSLATION,\n    }));\n  };\n\n  handleTouchStart = event => {\n    this.saveScrollPosition();\n    const { clientX, clientY } = event.targetTouches[0];\n    this.setState({ swiping: true, clientX, clientY });\n  };\n\n  handleTouchMove = size => event => {\n    const { position } = this.props;\n    const {\n      clientX: prevClientX,\n      clientY: prevClientY,\n      scrolling,\n    } = this.state;\n\n    const maxWidth = window.innerWidth;\n    const { clientX, clientY } = event.targetTouches[0];\n\n    const diffTranslateX = Math.abs(clientX - prevClientX);\n    const diffTranslateY = Math.abs(clientY - prevClientY);\n\n    if (scrolling || diffTranslateY > diffTranslateX) {\n      this.setState({ scrolling: true });\n    } else if (position === \"right\") {\n      this.setState({\n        translation: Math.min(\n          (maxWidth - clientX) / (maxWidth * size / 100) * 100,\n          STOP_TRANSLATION\n        ),\n      });\n    } else {\n      this.setState({\n        translation: Math.min(\n          clientX / (maxWidth * size / 100) * 100,\n          STOP_TRANSLATION\n        ),\n      });\n    }\n  };\n\n  handleTouchEnd = () => {\n    this.setState(({ translation }) => ({\n      swiping: false,\n      scrolling: false,\n      translation: translation < 50 ? START_TRANSLATION : STOP_TRANSLATION,\n    }));\n  };\n\n  render() {\n    const { position, size, children } = this.props;\n    const { swiping, translation } = this.state;\n\n    return children({\n      position,\n      size,\n      swiping,\n      translation,\n      mainContentScroll: this.mainContentScroll,\n      toggleDrawer: this.toggleDrawer,\n      handleTouchStart: this.handleTouchStart,\n      handleTouchMove: this.handleTouchMove,\n      handleTouchEnd: this.handleTouchEnd,\n    });\n  }\n}\n\nexport default Drawer;\n\nexport { default as DrawerContainer } from \"./DrawerContainer\";\nexport { default as DrawerOverlay } from \"./DrawerOverlay\";\nexport { default as DrawerContentContainer } from \"./DrawerContentContainer\";\nexport { default as MainContentContainer } from \"./MainContentContainer\";\n"],"names":["DrawerContainer","position","size","swiping","translation","toggleDrawer","handleTouchStart","handleTouchMove","handleTouchEnd","drawerContent","overlayStyle","contentStyle","open","defaultProps","transform","transition","DrawerOverlay","style","DrawerContentContainer","MainContentContainer","mainContentScroll","children","mainContentOpenStyle","START_TRANSLATION","STOP_TRANSLATION","Drawer","state","saveScrollPosition","window","pageYOffset","setState","event","targetTouches","clientX","clientY","props","prevClientX","prevClientY","scrolling","maxWidth","innerWidth","diffTranslateX","Math","abs","diffTranslateY","min","prevProps","prevState","scrollTo","Component"],"mappings":";;;;;;;;AAKA,IAAMA,kBAAkB,SAAlBA,eAAkB,OAYlB;MAXJC,QAWI,QAXJA,QAWI;MAVJC,IAUI,QAVJA,IAUI;MATJC,OASI,QATJA,OASI;MARJC,WAQI,QARJA,WAQI;MAPJC,YAOI,QAPJA,YAOI;MANJC,gBAMI,QANJA,gBAMI;MALJC,eAKI,QALJA,eAKI;MAJJC,cAII,QAJJA,cAII;MAHJC,aAGI,QAHJA,aAGI;MAFJC,YAEI,QAFJA,YAEI;MADJC,YACI,QADJA,YACI;;MACEC,OAAOR,cAAc,CAA3B;;SAGE;;MAAK,WAAU,iBAAf;MACG,aAAD;gBACYH,QADZ;YAEQW,IAFR;eAGWT,OAHX;mBAIeC,WAJf;oBAKgBC,YALhB;wBAMoBC,gBANpB;uBAOmBC,eAPnB;sBAQkBC,cARlB;aASSE;MAVX;MAYG,sBAAD;gBACYT,QADZ;YAEQC,IAFR;eAGWC,OAHX;mBAIeC,WAJf;oBAKgBC,YALhB;wBAMoBC,gBANpB;uBAOmBC,eAPnB;sBAQkBC,cARlB;qBASiBC,aATjB;aAUSE;;GAvBb;CAfF;;AA4CA,AAgBAX,gBAAgBa,YAAhB,GAA+B;gBACf,EADe;gBAEf;CAFhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA,AAGA,IAAMC,YAAY,SAAZA,SAAY,OAAiC;MAA9Bb,QAA8B,QAA9BA,QAA8B;MAApBE,OAAoB,QAApBA,OAAoB;MAAXS,IAAW,QAAXA,IAAW;;UACzCX,QAAR;SACO,KAAL;aACS;aACA,CADA;cAEC,CAFD;eAGE,CAHF;gBAIGE,WAAWS,IAAX,GAAkB,MAAlB,GAA2B;OAJrC;SAMG,OAAL;aACS;eACE,CADF;aAEA,CAFA;gBAGG,CAHH;eAIET,WAAWS,IAAX,GAAkB,MAAlB,GAA2B;OAJpC;SAMG,QAAL;aACS;gBACG,CADH;cAEC,CAFD;eAGE,CAHF;gBAIGT,WAAWS,IAAX,GAAkB,MAAlB,GAA2B;OAJrC;SAMG,MAAL;;aAES;cACC,CADD;aAEA,CAFA;gBAGG,CAHH;eAIET,WAAWS,IAAX,GAAkB,MAAlB,GAA2B;OAJpC;;CAzBN;;AAkCA,IAAMG,aAAa,SAAbA,UAAa,QAAuB;MAApBZ,OAAoB,SAApBA,OAAoB;MAAXS,IAAW,SAAXA,IAAW;;MACpCT,OAAJ,EAAa;WACJ,EAAP;GADF,MAEO,IAAIS,IAAJ,EAAU;WACR,6DAAP;;SAEK,8DAAP;CANF;;AASA,IAAMI,gBAAgB,SAAhBA,aAAgB;MACpBf,QADoB,SACpBA,QADoB;MAEpBW,IAFoB,SAEpBA,IAFoB;MAGpBT,OAHoB,SAGpBA,OAHoB;MAIpBC,WAJoB,SAIpBA,WAJoB;MAKpBC,YALoB,SAKpBA,YALoB;MAMpBC,gBANoB,SAMpBA,gBANoB;MAOpBC,eAPoB,SAOpBA,eAPoB;MAQpBC,cARoB,SAQpBA,cARoB;MASpBS,KAToB,SASpBA,KAToB;SAWpB;eACY,eADZ;aAEWL,OAAOP,YAAP,GAAsB,IAFjC;kBAGgBC,gBAHhB;iBAIeC,gBAAgB,GAAhB,CAJf;gBAKcC,cALd;;gBAOc,OADZ;cAEU,CAFV;uCAGiC,MAAMJ,WAAN,GAAoB,GAAnD,MAHF;kBAIcW,WAAW,EAAEZ,gBAAF,EAAWS,UAAX,EAAX;OACTE,UAAU,EAAEb,kBAAF,EAAYE,gBAAZ,EAAqBS,UAArB,EAAV,CALL,EAMKK,KANL;IAjBkB;CAAtB;;AC5CA,IAAMH,cAAY,SAAZA,SAAY,OAAqC;MAAlCb,QAAkC,QAAlCA,QAAkC;MAAxBC,IAAwB,QAAxBA,IAAwB;MAAlBE,WAAkB,QAAlBA,WAAkB;;UAC7CH,QAAR;SACO,KAAL;aACS;cACC,CADD;eAEE,CAFF;mBAGIC,IAAT,MAHK;gBAIMA,IAAX,MAJK;mCAKoBE,WAAzB;OALF;SAOG,OAAL;aACS;aACA,CADA;gBAEG,CAFH;qBAGMF,IAAX,MAHK;eAIKA,IAAV,MAJK;mCAKoB,CAACE,WAA1B;OALF;SAOG,QAAL;aACS;cACC,CADD;eAEE,CAFF;sBAGOF,IAAZ,MAHK;gBAIMA,IAAX,MAJK;mCAKoB,CAACE,WAA1B;OALF;SAOG,MAAL;;aAES;aACA,CADA;gBAEG,CAFH;oBAGKF,IAAV,MAHK;eAIKA,IAAV,MAJK;mCAKoBE,WAAzB;OALF;;CA5BN;;AAsCA,IAAMc,yBAAyB,SAAzBA,sBAAyB;MAC7BjB,QAD6B,SAC7BA,QAD6B;MAE7BC,IAF6B,SAE7BA,IAF6B;MAG7BC,OAH6B,SAG7BA,OAH6B;MAI7BC,WAJ6B,SAI7BA,WAJ6B;MAK7BE,gBAL6B,SAK7BA,gBAL6B;MAM7BC,eAN6B,SAM7BA,eAN6B;MAO7BC,cAP6B,SAO7BA,cAP6B;MAQ7BC,aAR6B,SAQ7BA,aAR6B;MAS7BQ,KAT6B,SAS7BA,KAT6B;SAW7B;;;iBACY,wBADZ;oBAEgBX,gBAFhB;mBAGeC,gBAAgBL,IAAhB,CAHf;kBAIcM,cAJd;;kBAMc,OADZ;gBAEU,CAFV;oBAGcL,UAAU,EAAV,GAAe;SACxBW,YAAU,EAAEb,kBAAF,EAAYC,UAAZ,EAAkBE,wBAAlB,EAAV,CAJL,EAKKa,KALL;;;GAhB2B;CAA/B;;ACtCA,IAAME,uBAAuB,SAAvBA,oBAAuB,OAAkD;MAA/Cf,WAA+C,QAA/CA,WAA+C;MAAlCgB,iBAAkC,QAAlCA,iBAAkC;MAAfC,QAAe,QAAfA,QAAe;;MACvEC,uBACJlB,cAAc,CAAd,GACI;cACY,OADZ;SAEO,CAACgB,iBAFR;UAGQ,CAHR;WAIS;GALb,GAOI,EARN;;SAWE;;MAAK,WAAU,sBAAf,EAAsC,oBAAYE,oBAAZ,CAAtC;;GADF;CAXF;;ACAA,IAAMC,oBAAoB,CAAC,EAA3B;AACA,IAAMC,mBAAmB,GAAzB;;IAEMC;;;;;;;;;;;;;;qLAOJC,QAAQ;eACG,KADH;iBAEK,KAFL;mBAGOH,iBAHP;eAIG,CAJH;eAKG;aAaXH,oBAAoB,SAEpBO,qBAAqB,YAAM;UACjBvB,WADiB,GACD,MAAKsB,KADJ,CACjBtB,WADiB;;UAErBA,gBAAgBmB,iBAApB,EAAuC;cAChCH,iBAAL,GAAyBQ,OAAOC,WAAhC;;aAIJxB,eAAe,YAAM;YACdsB,kBAAL;YACKG,QAAL,CAAc;YAAG1B,WAAH,SAAGA,WAAH;eAAsB;uBACrBA,cAAc,EAAd,GAAmBmB,iBAAnB,GAAuCC;SADxC;OAAd;aAKFlB,mBAAmB,iBAAS;YACrBqB,kBAAL;kCAC6BI,MAAMC,aAAN,CAAoB,CAApB,CAFH;UAElBC,OAFkB,yBAElBA,OAFkB;UAETC,OAFS,yBAETA,OAFS;;YAGrBJ,QAAL,CAAc,EAAE3B,SAAS,IAAX,EAAiB8B,gBAAjB,EAA0BC,gBAA1B,EAAd;aAGF3B,kBAAkB;aAAQ,iBAAS;YACzBN,QADyB,GACZ,MAAKkC,KADO,CACzBlC,QADyB;0BAM7B,MAAKyB,KANwB;YAGtBU,WAHsB,eAG/BH,OAH+B;YAItBI,WAJsB,eAI/BH,OAJ+B;YAK/BI,SAL+B,eAK/BA,SAL+B;;;YAQ3BC,WAAWX,OAAOY,UAAxB;qCAC6BT,MAAMC,aAAN,CAAoB,CAApB,CATI;YASzBC,OATyB,0BASzBA,OATyB;YAShBC,OATgB,0BAShBA,OATgB;;;YAW3BO,iBAAiBC,KAAKC,GAAL,CAASV,UAAUG,WAAnB,CAAvB;YACMQ,iBAAiBF,KAAKC,GAAL,CAAST,UAAUG,WAAnB,CAAvB;;YAEIC,aAAaM,iBAAiBH,cAAlC,EAAkD;gBAC3CX,QAAL,CAAc,EAAEQ,WAAW,IAAb,EAAd;SADF,MAEO,IAAIrC,aAAa,OAAjB,EAA0B;gBAC1B6B,QAAL,CAAc;yBACCY,KAAKG,GAAL,CACX,CAACN,WAAWN,OAAZ,KAAwBM,WAAWrC,IAAX,GAAkB,GAA1C,IAAiD,GADtC,EAEXsB,gBAFW;WADf;SADK,MAOA;gBACAM,QAAL,CAAc;yBACCY,KAAKG,GAAL,CACXZ,WAAWM,WAAWrC,IAAX,GAAkB,GAA7B,IAAoC,GADzB,EAEXsB,gBAFW;WADf;;OAxBc;aAiClBhB,iBAAiB,YAAM;YAChBsB,QAAL,CAAc;YAAG1B,WAAH,SAAGA,WAAH;eAAsB;mBACzB,KADyB;qBAEvB,KAFuB;uBAGrBA,cAAc,EAAd,GAAmBmB,iBAAnB,GAAuCC;SAHxC;OAAd;;;;;;uCAlEiBsB,WAAWC,WAAW;UAC/B3C,WAD+B,GACf,KAAKsB,KADU,CAC/BtB,WAD+B;;UAGrCA,gBAAgB2C,UAAU3C,WAA1B,IACAA,gBAAgBmB,iBAFlB,EAGE;eACOyB,QAAP,CAAgB,CAAhB,EAAmB,KAAK5B,iBAAxB;;;;;6BAmEK;mBAC8B,KAAKe,KADnC;UACClC,QADD,UACCA,QADD;UACWC,IADX,UACWA,IADX;UACiBmB,QADjB,UACiBA,QADjB;mBAE0B,KAAKK,KAF/B;UAECvB,OAFD,UAECA,OAFD;UAEUC,WAFV,UAEUA,WAFV;;;aAIAiB,SAAS;0BAAA;kBAAA;wBAAA;gCAAA;2BAKK,KAAKD,iBALV;sBAMA,KAAKf,YANL;0BAOI,KAAKC,gBAPT;yBAQG,KAAKC,eARR;wBASE,KAAKC;OAThB,CAAP;;;;EA5FiByC;;;;;;;;;;;;;;;;"}